<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Quiz extends CI_Controller {

    public function index() {
        $id = $this->session->userdata('id');
        if ($id != "") {
            $this->template->write_view('content', 'quiz');
            $this->template->render();
        } else {
            $this->template->write('content', '<div style="min-height: 50px;">โปรดเข้าสู่ระบบก่อน (โดยการใส่รหัสนักศึกษาและรหัสผ่านด้านบน)</div>');
            $this->template->render();
        }
    }

    public function personal() {

        $q = array(
            array("ข้าพเจ้าชอบที่จะ", "แก้ปัญหาใหม่ ๆ ที่มีความสลับซับซ้อน", "เลือกทำงานที่เคยทำสำเร็จมาแล้ว"),
            array("ข้าพเจ้าชอบที่จะ", "ทำงานตามลำพังในที่สงบเงียบ", "อยู่ตรงที่งานกำลังดำเนินอยู่"),
            array("ข้าพเจ้าชอบหัวหน้าที่", "ได้สร้างและกำหนดเกณฑ์การทำงานและการตัดสินใจไว้ให้แล้ว", "ใส่ใจต่อความต้องการและช่วยเหลือลูกน้องรายบุคคล"),
            array("เมื่อข้าพเจ้าทำงานเกี่ยวกับโครงการ ข้าพเจ้าต้องการ", "ทำให้เสร็จและปิดโครงการทันที", "ไม่รีบปิดโครงการเผื่อไว้หากต้องปรับปรุงเปลี่ยนแปลง"),
            array("เมื่อต้องตัดสินใจ สิ่งสำคัญที่สุดที่ต้องคำนึงถึง คือ", "การคิดเชิงเหตุผล การมีข้อมูลและความคิดเห็น", "ความรู้สึกและค่านิยมของคน"),
            array("เมื่อต้องทำงานโครงการ ข้าพเจ้าจะ…", "คิดทบทวนหลายครั้งก่อนที่จะตัดสินใจว่าจะเริ่มดำเนินการอย่างไร", "เริ่มต้นลงมือทำงานทันที พร้อมกับคิดไปทำไปทีละขั้น"),
            array("เมื่อต้องทำงานโครงการ ข้าพเจ้าชอบที่จะ …", "คงวิธีการควบคุมให้มากที่สุดเท่าที่จะเป็นไปได้", "ตรวจสอบหาแนวทางต่าง ๆ ที่สามารถนำมาใช้ดำเนินการ"),
            array("ในการทำงานของข้าพเจ้า ข้าพเจ้ามักจะ …", "ทำพร้อมกันหลายโครงการ และพยายามหาความรู้จากแต่ละโครงการให้มากที่สุดเท่าที่จะทำได้", "เลือกทำโครงการที่มีความท้าทายมากที่สุดเพียงโครงการเดียวและจะทุ่มเทอย่างเต็มที่"),
            array("ข้าพเจ้ามักจะ …", "จัดทำรายการและแผนการทำงานก่อนที่จะเริ่มต้นทำงาน และไม่พอใจอย่างยิ่งถ้าถูกปรับเปลี่ยนไปจากแผนที่กำหนดไว้นี้", "หลีกเลี่ยงการทำแผนแต่จะปล่อยให้งานคืบหน้าไปเองขณะที่ทำงานนั้น"),
            array("เมื่ออภิปรายปัญหากับเพื่อน  ข้าพเจ้าสามารถ...", "มองเห็นภาพรวมได้โดยง่าย", "เข้าใจจุดใดจุดหนึ่งของสถานการณ์นั้นได้อย่างลึกซึ้งได้โดยง่าย"),
            array("เมื่อมีเสียงกริ่งโทรศัพท์ดังขึ้นที่ทำงานหรือที่บ้าน ปกติข้าพเจ้า", "รู้สึกว่าเป็นเสียงที่รบกวนการทำงาน", "ไม่รังเกียจที่จะรับสายโทรศัพท์นั้น"),
            array("คำใดที่อธิบายตรงกับตัวข้าพเจ้าได้ดีกว่ากัน ระหว่าง …", "การวิเคราะห์ (analytical)", "ความเข้าอกเข้าใจ (empathetic)"),
            array("เมื่อข้าพเจ้าลงมือทำการบ้าน ข้าพเจ้ามักจะ …", "ทำอย่างสม่ำเสมอและคงเส้นคงวา", "ทำอย่างเต็มที่แต่มีช่วงหยุดเป็นช่วง ๆ"),
            array("เมื่อข้าพเจ้าเกิดได้ยินใครพูดถึงเรื่องใดเรื่องหนึ่ง ข้าพเจ้ามักจะพยายาม…", "นำมาเกี่ยวข้องกับประสบการณ์เก่าของข้าพเจ้าและดูว่าคล้ายกันไหม", "วิเคราะห์และประเมินเนื้อหาที่ได้ยินนั้น"),
            array("เมื่อข้าพเจ้าเกิดความคิดใหม่ขึ้น ข้าพเจ้ามักจะ …", "ลงมือทำดู", "ลองพิจารณาใคร่ครวญความคิดใหม่นั้นอีกหลายครั้ง"),
            array("เมื่อต้องทำงานโครงการ ข้าพเจ้ามักจะ …", "ตีกรอบงานให้แคบลง เพื่อที่จะมองเห็นภาพได้ชัดเจนและตรงประเด็นยิ่งขึ้น", "ขยายขอบเขตงานออกไป เพื่อให้สามารถครอบคลุมประเด็นที่เกี่ยวข้องได้ครบ"),
            array("เมื่อข้าพเจ้าอ่านอะไรก็แล้วแต่ ข้าพเจ้ามักจะ …", "เพ่งความคิดไปยังข้อความที่เขียนนั้น", "อ่านแต่ละบรรทัด เพื่อหาคำสำคัญที่เกี่ยวข้องกับความคิดต่าง ๆ"),
            array("เมื่อข้าพเจ้าจำเป็นต้องตัดสินใจโดยเร่งด่วน ข้าพเจ้ามัก…", "รู้สึกอึดอัดใจและอยากได้ข้อมูลเพิ่มเติม", "สามารถตัดสินใจได้จากข้อมูลเท่าที่มีอยู่"),
            array("ในการประชุม ข้าพเจ้ามักจะ…", "ค่อย ๆ ประมวลความคิดตนเองในขณะที่พูดถึงเรื่องนั้น", "พูดออกไปก็ต่อเมื่อได้ใคร่ครวญความคิดเกี่ยวกับเรื่องนั้นอย่างดีแล้ว"),
            array("ในการทำงาน ประเด็นที่ข้าพเจ้าชอบใช้เวลาค่อนข้างมากกว่าคือ", "ประเด็นที่เกี่ยวกับความคิด", "ประเด็นที่เกี่ยวกับคน"),
            array("ในการประชุม ข้าพเจ้ามักถูกรบกวนให้รำคาญใจกับคนที่…", "ชอบเสนอความคิดมากมายที่ยังขาดความชัดเจน", "ทำให้เสียเวลาที่ประชุมไปกับการพูดถึงรายละเอียดของการทำงานอย่างถี่ยิบ"),
            array("ข้าพเจ้าชอบเป็น…", "คนตื่นเช้า", "คนนอนดึก"),
            array("รูปแบบการเตรียมพร้อมก่อนเข้าร่วมประชุมของข้าพเจ้า คือ", "อยากเข้าประชุมและได้แสดงความคิดเห็นต่อที่ประชุม", "เตรียมตัวพร้อมเต็มที่ และขีดเขียนวาระหัวข้อการประชุมนั้นออกมา"),
            array("ในที่ประชุมข้าพเจ้าชอบคนที่ …", "สามารถแสดงออกทางอารมณ์ได้ดี", "ให้ความสำคัญกับงาน"),
            array("ข้าพเจ้าชอบการทำงานกับหน่วยงานที่ …", "กระตุ้นการใช้ปัญญาในการทำงานให้กับข้าพเจ้า", "ข้าพเจ้าผูกพันกับเป้าหมายและพันธกิจ"),
            array("ช่วงสุดสัปดาห์ ข้าพเจ้ามักจะ…", "วางแผนล่วงหน้าว่าจะทำอะไรบ้าง", "ไปดูว่ามีอะไรเกิดขึ้นบ้าง แล้วจึงตัดสินใจเข้าร่วมตามนั้น"),
            array("ข้าพเจ้าเป็นคนประเภท…", "ชอบออกไปพบปะผู้คน", "ชอบใช้ความคิดไตร่ตรอง"),
            array("ข้าพเจ้าชอบทำงานกับหัวหน้าที่…", "เต็มไปด้วยความคิดใหม่ ๆ", "เป็นนักปฏิบัติที่ดี"),
            array("เลือกระหว่าง ก กับ ข", "สังคม (social)", "เป็นทฤษฎี (theoretical)"),
            array("เลือกระหว่าง ก กับ ข", "ความเป็นเจ้าความคิด (ingenuity)", "ความเป็นนักปฏิบัติ (practicality)"),
            array("เลือกระหว่าง ก กับ ข", "การจัดรูปแบบ (orgazed)", "การยืดหยุ่นได้ (adaptable)"),
            array("เลือกระหว่าง ก กับ ข", "คล่องแคล่ว (active)", "การมีสมาธิ (concentration)")
        );

        $data = array("q" => $q);

        $id = $this->session->userdata('id');
        if ($id != "") {
            $this->template->write_view('content', 'personal', $data);
            $this->template->render();
        } else {
            $this->template->write('content', '<div style="min-height: 50px;">โปรดเข้าสู่ระบบก่อน (โดยการใส่รหัสนักศึกษาและรหัสผ่านด้านบน)</div>');
            $this->template->render();
        }
    }

    public function personalSave() {

        $id = $this->session->userdata('id');
        if ($id != "") {

            // answer of a choice
            $a = array('N', 'I', 'T', 'J', 'T', 'I', 'J', 'P', 'J', 'N', 'I', 'T', 'S', 'F', 'E', 'S', 'S', 'P', 'E', 'T', 'S', 'I', 'P', 'F', 'T', 'J', 'E', 'N', 'F', 'N', 'J', 'E');

            $data = array();

            $n = 0;
            $s = 0;
            $i = 0;
            $e = 0;
            $t = 0;
            $f = 0;
            $p = 0;
            $j = 0;

            for ($loop = 1; $loop <= 32; $loop++) {

                $ans[$loop] = $this->input->post('ans' . $loop);

                if ($a[$loop - 1] == "N" && $ans[$loop] == "a")
                    $n++;
                else
                    $s++;

                if ($a[$loop - 1] == "S" && $ans[$loop] == "a")
                    $s++;
                else
                    $n++;

                if ($a[$loop - 1] == "I" && $ans[$loop] == "a")
                    $i++;
                else
                    $e++;

                if ($a[$loop - 1] == "E" && $ans[$loop] == "a")
                    $e++;
                else
                    $i++;

                if ($a[$loop - 1] == "T" && $ans[$loop] == "a")
                    $t++;
                else
                    $f++;

                if ($a[$loop - 1] == "F" && $ans[$loop] == "a")
                    $f++;
                else
                    $t++;

                if ($a[$loop - 1] == "J" && $ans[$loop] == "a")
                    $j++;
                else
                    $p++;

                if ($a[$loop - 1] == "P" && $ans[$loop] == "a")
                    $p++;
                else
                    $j++;

                $data = array("p$loop" => $ans[$loop]);
                $this->db->where('student_id', $id);
                $this->db->update('register', $data);
            }

            // Cal I,E
            if ($i > $e) {
                $r1 = "I";
            } else if ($i < $e) {
                $r1 = "E";
            } else {
                if ($a[10] == "I" && $ans[11] == "a")
                    $r1 = "E";
                else
                    $r1 = "I";
            }

            // Cal S,N
            if ($s > $n) {
                $r2 = "S";
            } else if ($s < $n) {
                $r2 = "N";
            } else {
                if ($a[15] == "S" && $ans[16] == "a")
                    $r2 = "N";
                else
                    $r2 = "S";
            }

            // Cal T,F
            if ($t > $f) {
                $r3 = "T";
            } else if ($t < $f) {
                $r3 = "F";
            } else {
                if ($a[23] == "T" && $ans[24] == "a")
                    $r3 = "F";
                else
                    $r3 = "T";
            }

            // Cal J,P
            if ($j > $p) {
                $r4 = "J";
            } else if ($j < $p) {
                $r4 = "P";
            } else {
                if ($a[22] == "J" && $ans[23] == "a")
                    $r4 = "P";
                else
                    $r4 = "J";
            }

            $data = array("result" => ($r1 . $r2 . $r3 . $r4));
            $this->db->where('student_id', $id);
            $this->db->update('register', $data);

            $this->template->write('content', '<div style="min-height: 50px;">การทำแบบทดสอบเสร็จสิ้น ^_^</div>');
            $this->template->render();
        } else {
            $this->template->write('content', '<div style="min-height: 50px;">โปรดเข้าสู่ระบบก่อน (โดยการใส่รหัสนักศึกษาและรหัสผ่านด้านบน)</div>');
            $this->template->render();
        }
    }

    public function save() {
        if (0) {
            $this->template->write('content', '<div style="height: 100px; text-align: center;">ขณะนี้ยังปิดให้อัพเดทข้อมูลแล้ว</div>', $data);
            $this->template->render();
        } else {
            $id = $this->session->userdata('id');
            if ($id == "") {
                $this->template->write('content', '<div style="height: 100px; text-align: center;">เฉพาะสมาชิกเท่านั้น</div>', $data);
                $this->template->render();
            } else {
                $query = $this->db->get_where('register', array('student_id' => $id));
                $row = $query->row_array();
                $update = array(
                    'last_edit' => date("y-m-d H:i:s", strtotime("now")),
                    'quiz1' => $this->input->post('quiz1'),
                    'quiz2' => $this->input->post('quiz2'),
                    'quiz3' => $this->input->post('quiz3'),
                    'quiz4' => $this->input->post('quiz4'),
                );
                $this->db->update('register', $update, array('id' => $row['id']));
                $this->session->set_userdata('id', $row['student_id']);
                redirect("quiz");
            }
        }
    }

}

?>